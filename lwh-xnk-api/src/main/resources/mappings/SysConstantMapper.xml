<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnk.service.dao.evaluation.SysConstantMapper">
  <resultMap id="BaseResultMap" type="com.xnk.service.api.model.SysConstant">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="child_type" jdbcType="INTEGER" property="childType" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, child_type, seq, name, value, create_by, create_time, update_by, update_time
  </sql>
  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_constant
    where id = #{id,jdbcType=BIGINT}
  </select>
    
  <!-- 模糊查询 -->
	<sql id="allAndLike">
		<trim suffix="" suffixOverrides=",">
		
		<if test="type != null">
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="childType != null">
        and child_type = #{childType,jdbcType=INTEGER}
      </if>
      <if test="seq != null">
        and seq = #{seq,jdbcType=INTEGER}
      </if>
      <if test="name != null and name != ''">
        and name like concat('%',#{name, jdbcType=VARCHAR},'%')
      </if>
		</trim>
	</sql>
	
  <!-- 总数 -->
	<select id="count" resultType="java.lang.Integer">
		select count(id) from sys_constant
		<where><include refid="allAndLike"/>
			<choose>
				<when test="page !=null and page.condition != null and page.condition != ''">
					${page.condition} 
				</when>
			</choose>
		</where>
	</select>
	
    <select id="page" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from sys_constant 
		<where><include refid="allAndLike"/>
			<choose>
				<when test="page !=null and page.condition != null and page.condition != ''">
					${page.condition} 
				</when>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				order by ${page.orderBy} 
			</when>
		</choose>
		limit #{page.start},#{page.pageSize}
	</select>
  	<select id="list" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM sys_constant
		<where><include refid="allAndLike"/>
			<choose>
				<when test="page !=null and page.condition != null and page.condition != ''">
					${page.condition} 
				</when>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				order by ${page.orderBy} 
			</when>
		</choose>
	</select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from sys_constant
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xnk.service.api.model.SysConstant">
    insert into sys_constant (id, type, child_type, seq, 
      name, value, create_by, 
      create_time, update_by, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{childType,jdbcType=INTEGER}, #{seq,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <update id="update" parameterType="com.xnk.service.api.model.SysConstant">
    update sys_constant
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="childType != null">
        child_type = #{childType,jdbcType=INTEGER},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>