<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnk.service.dao.user.UserTotalMapper">
  <resultMap id="BaseResultMap" type="com.xnk.service.api.model.UserTotal">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="evaluation_release_count" jdbcType="INTEGER" property="evaluationReleaseCount" />
    <result column="evaluation_already_buy_count" jdbcType="INTEGER" property="evaluationAlreadyBuyCount" />
    <result column="evaluation_sell_count" jdbcType="INTEGER" property="evaluationSellCount" />
    <result column="evaluation_like_count" jdbcType="INTEGER" property="evaluationLikeCount" />
    <result column="my_follow_user_count" jdbcType="INTEGER" property="myFollowUserCount" />
    <result column="my_follow_fan_count" jdbcType="INTEGER" property="myFollowFanCount" />
    <result column="my_follow_shoe_count" jdbcType="INTEGER" property="myFollowShoeCount" />
    <result column="my_follow_color_count" jdbcType="INTEGER" property="myFollowColorCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, evaluation_release_count, evaluation_already_buy_count, evaluation_sell_count, 
    evaluation_like_count, my_follow_user_count, my_follow_fan_count, my_follow_shoe_count, 
    my_follow_color_count, create_time, update_time
  </sql>
  
  <!-- 模糊查询 -->
	<sql id="allAndLike">
		<trim suffix="" suffixOverrides=",">
		    <if test="userId != null" > and user_id = #{userId, jdbcType=BIGINT} </if>
		</trim>
	</sql>
	
  <!-- 总数 -->
	<select id="count" resultType="java.lang.Integer">
		select count(id) from wx_user_total
		<where><include refid="allAndLike"/>
			<choose>
				<when test="page !=null and page.condition != null and page.condition != ''">
					${page.condition} 
				</when>
			</choose>
		</where>
	</select>
	
    <select id="page" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from wx_user_total 
		<where><include refid="allAndLike"/>
			<choose>
				<when test="page !=null and page.condition != null and page.condition != ''">
					${page.condition} 
				</when>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				order by ${page.orderBy} 
			</when>
		</choose>
		limit #{page.start},#{page.pageSize}
	</select>
	
	<select id="list" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM wx_user_total
		<where><include refid="allAndLike"/>
			<choose>
				<when test="page !=null and page.condition != null and page.condition != ''">
					${page.condition} 
				</when>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				order by ${page.orderBy} 
			</when>
		</choose>
	</select>
	
  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wx_user_total
    where 1=1
    <trim suffix="" suffixOverrides=",">
		    <if test="userId != null" > and user_id = #{userId, jdbcType=BIGINT} </if>
		    <if test="id != null" > and id = #{userId, jdbcType=BIGINT} </if>
		</trim>
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from wx_user_total
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xnk.service.api.model.UserTotal" keyProperty="id" useGeneratedKeys="true">
    insert into wx_user_total (id, user_id, evaluation_release_count, 
      evaluation_already_buy_count, evaluation_sell_count, 
      evaluation_like_count, my_follow_user_count, 
      my_follow_fan_count, my_follow_shoe_count, my_follow_color_count, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{evaluationReleaseCount,jdbcType=INTEGER}, 
      #{evaluationAlreadyBuyCount,jdbcType=INTEGER}, #{evaluationSellCount,jdbcType=INTEGER}, 
      #{evaluationLikeCount,jdbcType=INTEGER}, #{myFollowUserCount,jdbcType=INTEGER}, 
      #{myFollowFanCount,jdbcType=INTEGER}, #{myFollowShoeCount,jdbcType=INTEGER}, #{myFollowColorCount,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="update" parameterType="com.xnk.service.api.model.UserTotal">
    update wx_user_total
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="evaluationReleaseCount != null">
        evaluation_release_count = #{evaluationReleaseCount,jdbcType=INTEGER},
      </if>
      <if test="evaluationAlreadyBuyCount != null">
        evaluation_already_buy_count = #{evaluationAlreadyBuyCount,jdbcType=INTEGER},
      </if>
      <if test="evaluationSellCount != null">
        evaluation_sell_count = #{evaluationSellCount,jdbcType=INTEGER},
      </if>
      <if test="evaluationLikeCount != null">
        evaluation_like_count = #{evaluationLikeCount,jdbcType=INTEGER},
      </if>
      <if test="myFollowUserCount != null">
        my_follow_user_count = #{myFollowUserCount,jdbcType=INTEGER},
      </if>
      <if test="myFollowFanCount != null">
        my_follow_fan_count = #{myFollowFanCount,jdbcType=INTEGER},
      </if>
      <if test="myFollowShoeCount != null">
        my_follow_shoe_count = #{myFollowShoeCount,jdbcType=INTEGER},
      </if>
      <if test="myFollowColorCount != null">
        my_follow_color_count = #{myFollowColorCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
</mapper>